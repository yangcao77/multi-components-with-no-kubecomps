commands:
- exec:
    commandLine: mvn clean -Dmaven.repo.local=/home/user/.m2/repository package -Dmaven.test.skip=true
    component: tools
    group:
      isDefault: true
      kind: build
  id: build
- exec:
    commandLine: mvn -Dmaven.repo.local=/home/user/.m2/repository spring-boot:run
    component: tools
    group:
      isDefault: true
      kind: run
  id: run
- exec:
    commandLine: java -Xdebug -Xrunjdwp:server=y,transport=dt_socket,address=${DEBUG_PORT},suspend=n
      -jar target/*.jar
    component: tools
    group:
      isDefault: true
      kind: debug
  id: debug
- apply:
    component: outerloop-build
  id: build-image
components:
- image:
    dockerfile:
      buildContext: .
      rootRequired: false
      uri: ../docker/Dockerfile
    imageName: java-springboot-image:latest
  name: outerloop-build
- attributes:
    appstudio.has/ephemeralStorageLimit: 500Mi
    appstudio.has/ephemeralStorageRequest: 400Mi
    appstudio.has/replicas: 1
    appstudio.has/route: route111
    appstudio.has/storageLimit: 400Mi
    appstudio.has/storageRequest: 200Mi
  container:
    cpuLimit: "2"
    cpuRequest: 700m
    endpoints:
    - name: 8080-tcp
      targetPort: 1111
    env:
    - name: FOO
      value: foo1
    - name: BAR
      value: bar1
    image: quay.io/eclipse/che-java11-maven:7.36.0
    memoryLimit: 500Mi
    memoryRequest: 400Mi
    mountSources: true
    volumeMounts:
    - name: m2
      path: /home/user/.m2
  name: tools
- name: m2
  volume:
    size: 3Gi
metadata:
  attributes:
    alpha.dockerimage-port: 8081
  description: Java Spring Boot using Maven
  displayName: Java Spring Boot
  language: java
  name: java-springboot
  projectType: springboot
  provider: Red Hat
  supportUrl: https://github.com/devfile-samples/devfile-support#support-information
  tags:
  - Java
  - Spring
  version: 1.1.0
schemaVersion: 2.2.0
starterProjects:
- git:
    remotes:
      origin: https://github.com/odo-devfiles/springboot-ex.git
  name: springbootproject
